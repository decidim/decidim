version: 2

defaults: &defaults
  docker:
    - image: decidim/decidim:latest-dev
      environment:
        CC_TEST_REPORTER_ID: e052fe03e9f5f2874c7976bd2740d1b10477c964b9a5504f65a9a27f5a9633ca
        SIMPLECOV: true
        DATABASE_USERNAME: postgres
        FAIL_FAST: true
    - image: postgres
      environment:
        POSTGRES_USER: postgres
  working_directory: /app

dependency_cache: &dependency_cache
  keys:
    - dependencies-{{ .Branch }}
    - dependencies-master

jobs:
  build_test_app:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *dependency_cache
      - run:
          name: Install ruby dependencies
          command: bundle install
      - run:
          name: Install npm dependencies
          command: npm install
      - save_cache:
          key: dependencies-{{ .Branch }}
          paths:
            - /usr/local/bundle/
            - node_modules
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Generate test app
          command: bundle exec rake test_app
      - restore_cache:
         keys:
           - assets-{{ .Branch }}
           - assets-master
      - run:
          name: Precompile test app assets
          command: cd spec/decidim_dummy_app && bundle exec rails assets:precompile
      - save_cache:
          key: assets-{{ .Branch }}
          paths:
            - spec/decidim_dummy_app/public/assets
      - run:
          name: Install CodeClimate test reporter
          command: /app/.circleci/install_cc_test_reporter.sh
      - persist_to_workspace:
          root: /app
          paths:
            - "*"
  main:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - checkout
      - restore_cache:
          <<: *dependency_cache
      - run:
          name: Install ruby dependencies
          command: bundle install
      - run:
          name: Install npm dependencies
          command: npm install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run main folder npm lint
          command: npm run lint
      - run:
          name: Run main folder RSpec
          command: bundle exec rspec
      - save_cache:
          key: decidim-{{ .Branch }}
          paths:
            - /decidim/node_modules
            - /usr/local/bundle/gems
  core:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=core
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run core RSpec
          command: cd decidim-core && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.core.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.core.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  assemblies:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=assemblies
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run assemblies RSpec
          command: cd decidim-assemblies && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.assemblies.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.assemblies.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  api:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=api
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run api RSpec
          command: cd decidim-api && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.api.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.api.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  processes:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=processes
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run participatory_processes RSpec
          command: cd decidim-participatory_processes && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.processes.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.processes.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  admin:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=admin
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run admin RSpec
          command: cd decidim-admin && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.admin.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.admin.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  system:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=system
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run system RSpec
          command: cd decidim-system && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.system.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.system.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  proposals:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=proposals
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run proposals RSpec
          command: cd decidim-proposals && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.proposals.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.proposals.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  comments:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=comments
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run comments RSpec
          command: cd decidim-comments && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.comments.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.comments.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  meetings:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=meetings
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run meetings RSpec
          command: cd decidim-meetings && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.meetings.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.meetings.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  pages:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=pages
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run pages RSpec
          command: cd decidim-pages && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.pages.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.pages.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  accountability:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=accountability
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run accountability RSpec
          command: cd decidim-accountability && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.accountability.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.accountability.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  budgets:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=budgets
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run budgets RSpec
          command: cd decidim-budgets && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.budgets.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.budgets.json"
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/capybara
  surveys:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          <<: *dependency_cache
      - run: export CODECOV_FLAG=surveys
      - run: cd spec/decidim_dummy_app && bundle install
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: ./cc-test-reporter before-build
      - run:
          name: Run surveys RSpec
          command: cd decidim-surveys && bundle exec rake
      - run:
          name: Format test coverage
          command: ./cc-test-reporter format-coverage --output "coverage/codeclimate.surveys.json"
      - save_cache:
          key: codeclimate-test-coverage-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "coverage/codeclimate.surveys.json"
      - store_artifacts:
          path: /decidim/spec/decidim_dummy_app/tmp/capybara
  codeclimate-test-coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-core
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-assemblies
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-api
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-processes
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-admin
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-system
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-proposals
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-comments
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-meetings
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-pages
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-accountability
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-budgets
      - restore_cache:
          keys:
            - codeclimate-test-coverage-{{ .Branch }}-surveys
      - run:
          name: Sum CC test coverage reports
          command: ./cc-test-reporter sum-coverage --output - --parts 13 coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --input -

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_test_app
      - main
      - core:
          requires:
            - build_test_app
      - assemblies:
          requires:
            - build_test_app
      - api:
          requires:
            - build_test_app
      - processes:
          requires:
            - build_test_app
      - admin:
          requires:
            - build_test_app
      - system:
          requires:
            - build_test_app
      - proposals:
          requires:
            - build_test_app
      - comments:
          requires:
            - build_test_app
      - meetings:
          requires:
            - build_test_app
      - pages:
          requires:
            - build_test_app
      - accountability:
          requires:
            - build_test_app
      - budgets:
          requires:
            - build_test_app
      - surveys:
          requires:
            - build_test_app
      - codeclimate-test-coverage:
          requires:
            - core
            - assemblies
            - api
            - processes
            - admin
            - system
            - proposals
            - comments
            - meetings
            - pages
            - accountability
            - budgets
            - surveys
