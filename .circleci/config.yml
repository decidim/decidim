version: 2

defaults: &defaults
  docker:
    - image: deividrodriguez/decidim:$CIRCLE_SHA1
      environment:
        SIMPLECOV: true
        DATABASE_USERNAME: postgres
    - image: postgres
      environment:
        POSTGRES_USER: postgres
  working_directory: /code

jobs:
  build_docker_image:
    docker:
      - image: docker:17.10.0-ce-git
    working_directory: /code
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build, tag and push docker image
          command: |
            docker build -t deividrodriguez/decidim:$CIRCLE_SHA1 .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push deividrodriguez/decidim:$CIRCLE_SHA1
  build_test_app:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: npm i
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Generate test app
          command: bundle exec rake decidim:generate_test_app
      - persist_to_workspace:
          root: .
          paths:
            - "*"
  main:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run main folder npm lint
          command: cd /code && time npm run lint
      - run:
          name: Run main folder RSpec
          command: cd /code && time bundle exec rspec
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  core:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=core
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run core JS tests
          command: cd /code && time npm test -- decidim-core
      - run:
          name: Run core RSpec
          command: cd /code/decidim-core && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  assemblies:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=assemblies
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run assemblies JS tests
          command: cd /code && time npm test -- decidim-assemblies
      - run:
          name: Run assemblies RSpec
          command: cd /code/decidim-assemblies && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  api:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=api
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run api JS tests
          command: cd /code && time npm test -- decidim-api
      - run:
          name: Run api RSpec
          command: cd /code/decidim-api && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  processes:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=processes
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run participatory_processes JS tests
          command: cd /code && time npm test -- decidim-participatory_processes
      - run:
          name: Run participatory_processes RSpec
          command: cd /code/decidim-participatory_processes && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  admin:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=admin
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run admin JS tests
          command: cd /code && time npm test -- decidim-admin
      - run:
          name: Run admin RSpec
          command: cd /code/decidim-admin && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  system:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=system
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run system JS tests
          command: cd /code && time npm test -- decidim-system
      - run:
          name: Run system RSpec
          command: cd /code/decidim-system && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  proposals:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=proposals
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run proposals JS tests
          command: cd /code && time npm test -- decidim-proposals
      - run:
          name: Run proposals RSpec
          command: cd /code/decidim-proposals && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  comments:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=comments
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run comments JS tests
          command: cd /code && time npm test -- decidim-comments
      - run:
          name: Run comments RSpec
          command: cd /code/decidim-comments && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  meetings:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=meetings
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run meetings JS tests
          command: cd /code && time npm test -- decidim-meetings
      - run:
          name: Run meetings RSpec
          command: cd /code/decidim-meetings && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  pages:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=pages
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run pages JS tests
          command: cd /code && time npm test -- decidim-pages
      - run:
          name: Run pages RSpec
          command: cd /code/decidim-pages && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  accountability:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=accountability
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run accountability JS tests
          command: cd /code && time npm test -- decidim-accountability
      - run:
          name: Run accountability RSpec
          command: cd /code/decidim-accountability && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  budgets:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=budgets
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run budgets JS tests
          command: cd /code && time npm test -- decidim-budgets
      - run:
          name: Run budgets RSpec
          command: cd /code/decidim-budgets && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara
  surveys:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /code
      - run:
          name: Install PhantomJS
          command: sh .circleci/install-phantom.sh
      - run: export CODECOV_FLAG=surveys
      - run:
          name: Install dockerize
          command: sh .circleci/install-dockerize.sh
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create test DB
          command: |
            cd spec/decidim_dummy_app/
            bundle install
            RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run:
          name: Run surveys JS tests
          command: cd /code && time npm test -- decidim-surveys
      - run:
          name: Run surveys RSpec
          command: cd /code/decidim-surveys && time bundle exec rake
      - store_artifacts:
          path: /code/spec/decidim_dummy_app/tmp/capybara

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_docker_image
      - build_test_app:
          requires:
            - build_docker_image
      - main:
          requires:
            - build_test_app
      - core:
          requires:
            - build_test_app
      - assemblies:
          requires:
            - build_test_app
      - api:
          requires:
            - build_test_app
      - processes:
          requires:
            - build_test_app
      - admin:
          requires:
            - build_test_app
      - system:
          requires:
            - build_test_app
      - proposals:
          requires:
            - build_test_app
      - comments:
          requires:
            - build_test_app
      - meetings:
          requires:
            - build_test_app
      - pages:
          requires:
            - build_test_app
      - accountability:
          requires:
            - build_test_app
      - budgets:
          requires:
            - build_test_app
      - surveys:
          requires:
            - build_test_app
