version: 2

defaults: &defaults
  docker:
    # This is the sha of the latest `decidim/decidim:latest-test` docker image. You can retrieve the
    # latest digest by doing `$ docker pull decidim/decidim:latest-test`.
    - image: decidim/decidim@sha256:889d2f57b238518d0d9bd1177db860f2cc58caae4d1094b86e4e154e41b6aaa4
      environment:
        BUNDLE_GEMFILE: /app/Gemfile
        SIMPLECOV: true
        DATABASE_USERNAME: postgres
        FAIL_FAST: true
    - image: postgres
      environment:
        POSTGRES_USER: postgres
  working_directory: /app

references:
  attach_workspace: &attach_workspace
    attach_workspace:
      at: /app
  restore_ruby_cache: &restore_ruby_cache
    restore_cache:
      keys:
        - bundler-dependencies-{{ checksum "Gemfile.lock" }}
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      keys:
        - npm-dependencies-{{ checksum "package-lock.json" }}
  install_ruby_dependencies: &install_ruby_dependencies
    run:
      name: Install ruby dependencies
      command: bundle install
  install_npm_dependencies: &install_npm_dependencies
    run:
      name: Install npm dependencies
      command: npm install
  save_ruby_cache: &save_ruby_cache
    save_cache:
      key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
      paths:
        - /usr/local/bundle/
  save_npm_cache: &save_npm_cache
    save_cache:
      key: npm-dependencies-{{ checksum "package-lock.json" }}
      paths:
        - node_modules
  wait_for_db: &wait_for_db
    run:
      name: Wait for db
      command: dockerize -wait tcp://localhost:5432 -timeout 2m
  install_test_reporter: &install_test_reporter
    run:
      name: Install CodeClimate test reporter
      command: /app/.circleci/install_cc_test_reporter.sh
  create_test_db: &create_test_db
    run:
      name: Create test DB
      command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
  extract_failure_logs: &extract_failure_logs
    run:
      name: Extract failure logs
      command: |
        mkdir -p /app/spec/decidim_dummy_app/tmp/logs/
        tail -1000 /app/spec/decidim_dummy_app/log/test.log > /app/spec/decidim_dummy_app/tmp/logs/failures.log
      when: on_fail
  store_screenshot_artifacts: &store_screenshot_artifacts
    store_artifacts:
      path: /app/spec/decidim_dummy_app/tmp/screenshots
  store_log_artifacts: &store_log_artifacts
    store_artifacts:
      path: /app/spec/decidim_dummy_app/tmp/logs
  store_test_results: &store_test_results
    store_test_results:
      path: ~/rspec
  run_rspec: &run_rspec
    run:
      name: Run RSpec
      command: mkdir ~/rspec && cd decidim-$CIRCLE_JOB && rake
  format_test_coverage: &format_test_coverage
    run:
      name: Format CodeClimate test coverage
      command: ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.$CIRCLE_JOB.json coverage/.resultset.json
  persist_coverage_to_workspace: &persist_coverage_to_workspace
    persist_to_workspace:
      root: coverage
      paths:
        - codeclimate.*.json

jobs:
  build_test_app:
    <<: *defaults
    steps:
      - checkout
      - *restore_ruby_cache
      - *restore_npm_cache
      - *install_ruby_dependencies
      - *install_npm_dependencies
      - *save_ruby_cache
      - *save_npm_cache
      - *wait_for_db
      - run:
          name: Generate test app
          command: bundle exec rake test_app
      - *install_test_reporter
      - persist_to_workspace:
          root: /app
          paths:
            - "*"
  main:
    <<: *defaults
    steps:
      - *attach_workspace
      - checkout
      - *restore_ruby_cache
      - *install_ruby_dependencies
      - *save_ruby_cache
      - *wait_for_db
      - run:
          name: Run main folder RSpec
          command: mkdir ~/rspec && bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
      - run:
          name: Run rubocop
          command: bundle exec rubocop
      - run:
          name: Run erb_lint
          command: bundle exec erblint --lint-all
      - *store_test_results
  generators:
    <<: *defaults
    steps:
      - *attach_workspace
      - checkout
      - *restore_ruby_cache
      - *install_ruby_dependencies
      - *save_ruby_cache
      - *wait_for_db
      - *run_rspec
      - *install_test_reporter
      - *format_test_coverage
      - *store_test_results
      - *persist_coverage_to_workspace
  core:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  assemblies:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  initiatives:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  api:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  participatory_processes:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  admin:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_npm_cache
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  system:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  proposals:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  comments:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_npm_cache
      - run:
          name: Run main folder lint & tests
          command: npm run test:ci
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  meetings:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  pages:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  accountability:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  budgets:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  surveys:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  verifications:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  debates:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  sortitions:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  blogs:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  consultations:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_ruby_cache
      - *wait_for_db
      - *create_test_db
      - *run_rspec
      - *format_test_coverage
      - *extract_failure_logs
      - *store_screenshot_artifacts
      - *store_log_artifacts
      - *store_test_results
      - *persist_coverage_to_workspace
  build_design_app:
    working_directory: /app
    docker:
      - image: docker:17.09.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            docker build -t registry.heroku.com/decidim-design/web -f Dockerfile.design .
      - run:
          name: Push deployment image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
              docker push registry.heroku.com/decidim-design/web
            fi
  upload-coverage:
    <<: *defaults
    environment:
      - CC_TEST_REPORTER_ID: 148648277beffae5e8707dac3b5c0df89bf6d5cf44c696e06c82cdfc87473520
    steps:
      - *attach_workspace
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./cc-test-reporter sum-coverage codeclimate.*.json -p 20 -o codeclimate.total.json
            ./cc-test-reporter upload-coverage -i codeclimate.total.json

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_design_app:
          filters:
            branches:
              ignore:
                - /^l10n_*/
      - build_test_app:
          filters:
            branches:
              ignore:
                - /^l10n_*/
      - main:
          filters:
            branches:
              ignore:
                - /^l10n_*/
      - generators:
          filters:
            branches:
              ignore:
                - /^l10n_*/
      - core:
          requires:
            - build_test_app
      - assemblies:
          requires:
            - build_test_app
      - initiatives:
          requires:
            - build_test_app
      - api:
          requires:
            - build_test_app
      - participatory_processes:
          requires:
            - build_test_app
      - admin:
          requires:
            - build_test_app
      - system:
          requires:
            - build_test_app
      - proposals:
          requires:
            - build_test_app
      - sortitions:
          requires:
            - build_test_app
      - blogs:
          requires:
            - build_test_app
      - consultations:
          requires:
            - build_test_app
      - comments:
          requires:
            - build_test_app
      - meetings:
          requires:
            - build_test_app
      - pages:
          requires:
            - build_test_app
      - accountability:
          requires:
            - build_test_app
      - budgets:
          requires:
            - build_test_app
      - surveys:
          requires:
            - build_test_app
      - verifications:
          requires:
            - build_test_app
      - debates:
          requires:
            - build_test_app
      - upload-coverage:
          requires:
            - main
            - generators
            - core
            - assemblies
            - initiatives
            - api
            - participatory_processes
            - admin
            - system
            - proposals
            - comments
            - meetings
            - pages
            - accountability
            - budgets
            - surveys
            - verifications
            - debates
            - sortitions
            - consultations
            - blogs
