version: 2

defaults: &defaults
  docker:
    # This is the sha of the latest `decidim/decidim:latest-test` docker image. You can retrieve the
    # latest digest by doing `$ docker pull decidim/decidim:latest-test`.
    - image: decidim/decidim@sha256:e2dc624d6a7ca2ee02080d1dcec0ed255a71b7bc4101afb2d2508dbf9568c77e
      environment:
        BUNDLE_GEMFILE: /app/Gemfile
        SIMPLECOV: true
        DATABASE_USERNAME: postgres
        FAIL_FAST: true
    - image: postgres
      environment:
        POSTGRES_USER: postgres
  working_directory: /app

jobs:
  build_test_app:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install ruby dependencies
          command: bundle install
      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - /usr/local/bundle/
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Generate test app
          command: bundle exec rake test_app
      - restore_cache:
         keys:
           - assets-{{ .Branch }}
           - assets-master
      - run:
          name: Precompile test app assets
          command: cd spec/decidim_dummy_app && bundle exec rails assets:precompile
      - save_cache:
          key: assets-{{ .Branch }}
          paths:
            - spec/decidim_dummy_app/public/assets
      - persist_to_workspace:
          root: /app
          paths:
            - "*"
  main:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - checkout
      - run:
          name: Install a rubygems revision that gets tests passing
          command: |
            git clone https://github.com/rubygems/rubygems /rubygems
            cd /rubygems
            git checkout e093fb7d594f97edaa6289547a90537871ca5f98
            git submodule update --init
            ruby setup.rb
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install ruby dependencies
          command: bundle install
      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - /usr/local/bundle/
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Run main folder RSpec
          command: mkdir ~/rspec && bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
      - run:
          name: Run rubocop
          command: bundle exec rubocop
      - run:
          name: Run erb_lint
          command: bundle exec erblint --lint-all
      - store_test_results:
          path: ~/rspec
  core:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run core RSpec
          command: mkdir ~/rspec && cd decidim-core && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  assemblies:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run assemblies RSpec
          command: mkdir ~/rspec && cd decidim-assemblies && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  api:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run api RSpec
          command: mkdir ~/rspec && cd decidim-api && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  processes:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run participatory_processes RSpec
          command: mkdir ~/rspec && cd decidim-participatory_processes && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  admin:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run admin RSpec
          command: mkdir ~/rspec && cd decidim-admin && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  system:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run system RSpec
          command: mkdir ~/rspec && cd decidim-system && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  proposals:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run proposals RSpec
          command: mkdir ~/rspec && cd decidim-proposals && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  comments:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - npm-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm dependencies
          command: npm install
      - save_cache:
          key: npm-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Run main folder lint & tests
          command: npm run test:ci
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run comments RSpec
          command: mkdir ~/rspec && cd decidim-comments && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  meetings:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run meetings RSpec
          command: mkdir ~/rspec && cd decidim-meetings && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  pages:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run pages RSpec
          command: mkdir ~/rspec && cd decidim-pages && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  accountability:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run accountability RSpec
          command: mkdir ~/rspec && cd decidim-accountability && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  budgets:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run budgets RSpec
          command: mkdir ~/rspec && cd decidim-budgets && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  surveys:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run surveys RSpec
          command: mkdir ~/rspec && cd decidim-surveys && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  verifications:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run verifications RSpec
          command: mkdir ~/rspec && cd decidim-verifications && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  debates:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run debates RSpec
          command: mkdir ~/rspec && cd decidim-debates && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  sortitions:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /app
      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m
      - run:
          name: Create test DB
          command: cd spec/decidim_dummy_app && RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: Run sortitions RSpec
          command: mkdir ~/rspec && cd decidim-sortitions && rake
      - store_artifacts:
          path: /app/spec/decidim_dummy_app/tmp/screenshots
      - store_test_results:
          path: ~/rspec
  build_design_app:
    working_directory: /app
    docker:
      - image: docker:17.09.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            docker build -t registry.heroku.com/decidim-design/web -f Dockerfile.design .
      - run:
          name: Push deployment image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
              docker push registry.heroku.com/decidim-design/web
            fi

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_design_app:
          filters:
            branches:
              ignore: /^l10n_master$/
      - build_test_app:
          filters:
            branches:
              ignore: /^l10n_master$/
      - main:
          filters:
            branches:
              ignore: /^l10n_master$/
      - core:
          requires:
            - build_test_app
      - assemblies:
          requires:
            - build_test_app
      - api:
          requires:
            - build_test_app
      - processes:
          requires:
            - build_test_app
      - admin:
          requires:
            - build_test_app
      - system:
          requires:
            - build_test_app
      - proposals:
          requires:
            - build_test_app
      - sortitions:
          requires:
            - build_test_app
      - comments:
          requires:
            - build_test_app
      - meetings:
          requires:
            - build_test_app
      - pages:
          requires:
            - build_test_app
      - accountability:
          requires:
            - build_test_app
      - budgets:
          requires:
            - build_test_app
      - surveys:
          requires:
            - build_test_app
      - verifications:
          requires:
            - build_test_app
      - debates:
          requires:
            - build_test_app
