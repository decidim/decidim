<div class="item_show__header">
  <h1 class="item_show__header-title">
    <%= t(".title") %>
    <%= link_to "#", class: "button button__secondary button__sm", id: "save-#{name}" do %>
      <%= t(".save") %>
    <% end %>
  </h1>
</div>

<div class="form-defaults form__wrapper">
  <div class="item__edit-form">
    <%= label_tag("available-#{name}", t(".filters")) %>
    <%= select_tag "available-#{name}", options_for_select(available_filters), include_blank: t(".add_filter") %>
  </div>
</div>

<div class="flex">
  <div id="selected-<%= name %>"></div>
  <%= link_to t(".clear_all"), "#", class: "button button__text-secondary ml-4 hidden", data: { clear_all: true } %>
</div>

<script>
  document.addEventListener("decidim:loaded", function() {
    var select = document.getElementById("available-<%= name %>");
    var drawer = window.Decidim.currentDialogs["<%= name %>-dialog"];
    var container = document.getElementById("selected-<%= name %>");
    var safe = document.getElementById("save-<%= name %>");
    var filtersContainer = document.getElementById("<%= name %>-filters_container");

    var removeFilter = function(evt) {
      evt.preventDefault();
      if (evt.target.tagName === "A" || evt.target.closest("a")) {
        evt.target.closest("[data-filter]").remove();
      }
      if(this.childElementCount === 0) {
        this.parentElement.querySelector("[data-clear-all]").classList.add("hidden");
      }
    };

    var clearAll = function(evt) {
      evt.preventDefault();
      this.innerHTML = "";
      this.parentElement.querySelector("[data-clear-all]").classList.add("hidden");
    };

    // render the filters already selected in the settings page
    drawer.dialog.addEventListener("open.dialog", function(evt) {
      container.innerHTML = filtersContainer.innerHTML;
      select.selectedIndex = 0;
      if(container.childElementCount > 0) {
        container.parentElement.querySelector("[data-clear-all]").classList.remove("hidden");
      }
    });

    select.addEventListener("change", function() {
      var id = select.options[select.selectedIndex].value;
      var text = select.options[select.selectedIndex].text;
      // add to containers as a span unless already there
      if (id && !container.querySelector(`[data-filter="${id}"]`)) {
        var span = "<%= j(render("taxonomy_filters_badge", value: "%ID%", title: "%TITLE%", name:, object_name: form.object_name)) %>";
        container.insertAdjacentHTML("beforeend", span.replace(/%ID%/g, id).replace(/%TITLE%/g, text));
        container.parentElement.querySelector("[data-clear-all]").classList.remove("hidden");
      }
      select.selectedIndex = 0;
    });

    container.addEventListener("click", removeFilter.bind(container));
    filtersContainer.addEventListener("click", removeFilter.bind(filtersContainer));
    container.parentElement.querySelector("[data-clear-all]").addEventListener("click", clearAll.bind(container));
    filtersContainer.parentElement.querySelector("[data-clear-all]").addEventListener("click", clearAll.bind(filtersContainer));

    safe.addEventListener("click", function(evt) {
      evt.preventDefault();
      filtersContainer.innerHTML = container.innerHTML;
      filtersContainer.parentElement.querySelector("[data-clear-all]").classList.remove("hidden");
      drawer.close();
    });
  });
</script>
