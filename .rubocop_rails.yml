---

Rails:
  Enabled: true

Rails/ActionFilter:
  EnforcedStyle: action
  SupportedStyles:
    - action
    - filter

Rails/Date:
  # The value `strict` disallows usage of `Date.today`, `Date.current`,
  # `Date#to_time` etc.
  # The value `flexible` allows usage of `Date.current`, `Date.yesterday`, etc
  # (but not `Date.today`) which are overridden by ActiveSupport to handle current
  # time zone.
  EnforcedStyle: flexible
  SupportedStyles:
    - strict
    - flexible

Rails/Exit:
  Include:
    - config/**/*.rb
    - lib/**/*.rb

Rails/NotNullColumn:
  Enabled: false

Rails/OutputSafety:
  Enabled: false

Rails/RequestReferer:
  EnforcedStyle: referer
  SupportedStyles:
    - referer
    - referrer

Rails/SafeNavigation:
  # This will convert usages of `try` to use safe navigation as well as `try!`.
  # `try` and `try!` work slighly differently. `try!` and safe navigation will
  # both raise a `NoMethodError` if the receiver of the method call does not
  # implement the intended method. `try` will not raise an exception for this.
  ConvertTry: false

Rails/TimeZone:
  # The value `strict` means that `Time` should be used with `zone`.
  # The value `flexible` allows usage of `in_time_zone` instead of `zone`.
  EnforcedStyle: flexible
  SupportedStyles:
    - strict
    - flexible

Rails/UniqBeforePluck:
  EnforcedStyle: conservative
  AutoCorrect: false

Rails/InverseOf:
  Enabled: false

Rails/ReversibleMigration:
  Enabled: false

Rails/CreateTableWithTimestamps:
  Enabled: false

# No idea why we need to explicitly set this cop but otherwise we get
# `Lint/UnneededDisable` false positives for this cop
Rails/SkipsModelValidations:
  Enabled: true
