#!/usr/bin/env ruby
# frozen_string_literal: true

require "thor"

require_relative "../lib/decidim/maintainers_toolbox/changelog_generator"

class ChangeLogGeneratorCLI < Thor
  desc "", <<~HELP
    Decidim's changelog generator. It will generate a changelog based on the pull requests merged since a given SHA
    This script will generate the sections needed for the changelog, using the
    labels of the merged PRs as a source of truth. It will add a section at the
    end, "Unsorted", with the list of PRs that could not be classified.
    It ignores any Crowdin PR.
  HELP

  option :github_token, required: true, desc: <<~HELP
    Required. Github Personal Access Token (PAT). It can be obtained from https://github.com/settings/tokens/new. You will need to create one with `public_repo` access.
    Alternatively, you can use the `gh` CLI tool to authenticate with `gh auth token` (i.e. --github-token=$(gh auth token))
  HELP
  option :since_sha, required: true, desc: <<~HELP
    Required. The git commit SHA from which to consider the changes. It is
    usually the last commit that modified the `.decidim_version` file.
  HELP

  default_task :changelog_generator

  def changelog_generator
    Decidim::MaintainersToolbox::ChangeLogGenerator.new(
      token: options[:github_token],
      since_sha: options[:since_sha]
    ).call
  rescue Decidim::MaintainersToolbox::ChangeLogGenerator::InvalidMetadataError
    puts "Metadata was not returned from the server. Please check that the provided GitHub token is correct."
  end

  def help
    super("changelog_generator")
  end

  def self.exit_on_failure?
    true
  end
end

ChangeLogGeneratorCLI.start(ARGV)
