name: "[CI] Blogs"
on:
  push:
    branches:
      - develop
      - release/*
      - "*-stable"
  pull_request:
    branches-ignore:
      - "chore/l10n*"
    paths:
      - "*"
      - ".github/**"
      - "decidim-admin/**"
      - "decidim-assemblies/**"
      - "decidim-blogs/**"
      - "decidim-comments/**"
      - "decidim-core/**"
      - "decidim-dev/**"
      - "decidim-participatory_processes/**"

env:
  CI: "true"
  RUBY_VERSION: 2.7.5
  NODE_VERSION: 16.9.1
  DECIDIM_MODULE: decidim-blogs
  CODECOV_TOKEN: bc15b944-6b42-420a-b3f9-a5a8fb214326

jobs:
  main:
    name: Tests
    runs-on: ubuntu-20.04
    if: "!startsWith(github.head_ref, 'chore/l10n')"
    timeout-minutes: 60
    services:
      postgres:
        image: postgres:11
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
      validator:
        image: ghcr.io/validator/validator:latest
        ports: ["8888:8888"]
    env:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost
      RUBYOPT: '-W:no-deprecated'
      VALIDATOR_HTML_URI: http://localhost:8888/
    steps:
      - uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 1
      - uses: ./.github/actions/module-rspec
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.DECIDIM_MODULE }}
      - run: bundle exec rspec
        name: RSpec
        working-directory: ${{ env.DECIDIM_MODULE }}
        env:
          SIMPLECOV: "true"
      - uses: codecov/codecov-action@v3
        name: Upload coverage
        with:
          token: ${{ env.CODECOV_TOKEN }}
          name: ${{ env.DECIDIM_MODULE }}
          flags: ${{ env.DECIDIM_MODULE }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: screenshots
          path: ./spec/decidim_dummy_app/tmp/screenshots
          if-no-files-found: ignore
