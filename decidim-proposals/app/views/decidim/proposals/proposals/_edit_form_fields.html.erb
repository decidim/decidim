<%= form_required_explanation %>

<div class="field hashtags__container">
  <%= form.text_field :title, class: "js-hashtags", value: form_presenter.title %>
</div>

<div class="field hashtags__container">
  <%= text_editor_for_proposal_body(form) %>
</div>

<% if @form.component_automatic_hashtags.any? %>
  <div class="field">
    <%= form.label :automatic_hashtags %>
    <div class="checkboxes hashtags">
      <% @form.component_automatic_hashtags.each do |hashtag| %>
        <label>
          <%= check_box_tag "", "", { checked: true }, { disabled: true } %>#<%= hashtag %>
        </label>
      <% end %>
    </div>
  </div>
<% end %>

<% if @form.component_suggested_hashtags.any? %>
  <div class="field">
    <%= form.label :suggested_hashtags, nil, for: nil %>
    <div class="checkboxes hashtags">
      <%= form.collection_check_boxes :suggested_hashtags, @form.component_suggested_hashtags.map {|hashtag| [hashtag.downcase, "##{hashtag}"]}, :first, :last do |option|
        option.label { option.check_box(checked: @form.suggested_hashtag_checked?(option.value)) + option.text }
      end %>
    </div>
  </div>
<% end %>

<% if component_settings.geocoding_enabled? %>
  <div class="field">
    <%= form.check_box :has_address, checked: form_has_address? %>
  </div>

  <div class="field" id="address_input">
    <%= form.text_field :address %>
  </div>
<% end %>

<% if @form.categories&.any? %>
  <div class="field">
    <%= form.categories_select :category_id, @form.categories, include_blank: t("decidim.proposals.proposals.edit.select_a_category") %>
  </div>
<% end %>

<% if current_participatory_space.has_subscopes? %>
  <div class="field">
    <%= scopes_picker_field form, :scope_id %>
  </div>
<% end %>

<% if current_organization.user_groups_enabled? && Decidim::UserGroups::ManageableUserGroups.for(current_user).verified.any? %>
  <div class="field">
    <%= user_group_select_field form, :user_group_id %>
  </div>
<% end %>

<% if component_settings.attachments_allowed? && @proposal %>
  <fieldset>
    <legend><%= t("attachment_legend", scope: "decidim.proposals.proposals.edit") %></legend>
    <%= form.fields_for :attachment, @form.attachment do |nested_form| %>
      <div class="field">
        <%= nested_form.text_field :title %>
      </div>

      <div class="field">
        <%= nested_form.upload :file, optional: false %>
        <% if @form.errors[:attachment].present? %>
          <% @form.errors[:attachment].each do |message| %>
            <small class="form-error is-visible">
              <%= message %>
            </small>
          <% end %>
        <% end %>
      </div>
    <% end %>
  </fieldset>
<% end %>
